# -*- coding: utf-8 -*-
"""App

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WfO86YwZIZfYqYT4QL1DkciwmQVqFb6r
"""

import pandas as pd
import numpy as np
import streamlit as st

result = pd.read_csv('/content/forecasted_result.csv')

#Convert the 'Date' column to a datetime object in the same format as selected_date

result['Date'] = pd.to_datetime(result['Date']).dt.strftime("%Y-%m-%d")

#Streamlit web application

st.title("Oil Price Forecasting App")

#Define the minimum and maximum date values

min_date = pd.to_datetime("2023-10-13")
max_date = pd.to_datetime("2024-10-09")

#Get the user's input date

forecast_date = st.date_input("Enter Date to forecast:", min_value=min_date, max_value=max_date, value=min_date)

#Format the selected date as a string

selected_date = forecast_date.strftime("%Y-%m-%d")

#Check if the selected date exists in the index
if selected_date in result['Date'].values:
    forecasted_price = result.loc[result['Date'] == selected_date, "Forecasted_value"].values[0]
    # Display the forecasted price
    st.write(f"Forecasted Price on {selected_date} is {forecasted_price:.2f}")
else:
    st.write(f"No forecast data available for {selected_date}")

import matplotlib.pyplot as plt
st.write("Line Plot of Closing and Forecasted Values:")
plt.figure(figsize=(10, 6))
result['Closing_value'].plot()
result['Forecasted_value'].plot()
plt.xlabel('Date')
plt.ylabel('Value')
plt.title('Closing Value vs Forecasted Value')
plt.legend()
st.pyplot(plt)